dnl Process this file with autoconf to produce a configure script.

AC_INIT(src)
AM_INIT_AUTOMAKE(peacock, 0.6.1)
AM_CONFIG_HEADER(config.h)

dnl
dnl Due to the sed scripts being split on 90 line blocks,
dnl this macro needs to be right at the beginning
dnl
AC_PROG_INTLTOOL([0.18])

dnl Pick up the Gnome macros.
AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

dnl
dnl GtkHTML checking
dnl
AC_MSG_CHECKING(for GtkHTML >= 0.4)
if gnome-config --libs gtkhtml > /dev/null 2>&1; then
	vers=`gnome-config --modversion gtkhtml`
	case $vers
	in
	    gtkhtml-[0.1-3])
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(GtkHTML >= 0.4 needed for Peacock)
		;;
	    *) 
		AC_MSG_RESULT(found)
                GTKHTML_CFLAGS=`gnome-config --cflags gtkhtml`
                GTKHTML_LIBS=`gnome-config --libs gtkhtml`
                AC_SUBST(GTKHTML_CFLAGS)
                AC_SUBST(GTKHTML_LIBS)
		;;
	esac
else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(GtkHTML needed for Peacock)
fi

dnl
dnl libglade checking
dnl
AM_PATH_LIBGLADE(,,gnome)

dnl
dnl GConf checking
dnl
AM_PATH_GCONF(0.6.0,,,gconf-gtk)

dnl
dnl PonG checking
dnl
AC_MSG_CHECKING(for PonG >= 1.0.0)
if gnome-config --libs pong > /dev/null 2>&1; then
	vers=`gnome-config --modversion pong`
	case $vers
	in
	    pong-1.0.[*])
		AC_MSG_RESULT(found)
                PONG_CFLAGS=`gnome-config --cflags pong`
                PONG_LIBS=`gnome-config --libs pong`
                AC_SUBST(PONG_CFLAGS)
                AC_SUBST(PONG_LIBS)
		;;
	    *) 
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(PonG >= 1.0.0 needed for Peacock)
		;;
	esac
else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(PonG >= 1.0.0 needed for Peacock)
fi

dnl
dnl GnomeVFS checking
dnl
AC_MSG_CHECKING(for GnomeVFS >= 1.0.0)
if gnome-config --libs vfs > /dev/null 2>&1; then
	vers=`gnome-config --modversion vfs`
	case $vers
	in
	    gnome-vfs-1.0.[*])
		AC_MSG_RESULT(found)
                GNOMEVFS_CFLAGS=`gnome-config --cflags vfs`
                GNOMEVFS_LIBS=`gnome-config --libs vfs`
                AC_SUBST(GNOMEVFS_CFLAGS)
                AC_SUBST(GNOMEVFS_LIBS)
		;;
	    *) 
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(GnomeVFS >= 1.0.0 needed for Peacock)
		;;
	esac
else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(GnomeVFS >= 1.0.0 needed for Peacock)
fi

dnl Add the languages which your application supports here.
ALL_LINGUAS="fr"
AM_GNU_GETTEXT()

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="`gnome-config --datadir`/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Set PACKAGE_GLADE_DIR in config.h
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_GLADE_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/glade")
else
  AC_DEFINE_UNQUOTED(PACKAGE_GLADE_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/glade")
fi

dnl Set PACKAGE_PONG_DIR in config.h
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_PONG_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pong")
else
  AC_DEFINE_UNQUOTED(PACKAGE_PONG_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pong")
fi

AC_OUTPUT([ po/Makefile.in m4/Makefile    intl/Makefile  intl/Makefile 
Makefile
macros/Makefile
src/Makefile
src/dialogs/Makefile
intl/Makefile
po/Makefile.in
doc/Makefile
doc/C/Makefile
pixmaps/Makefile
peacock.spec
])
